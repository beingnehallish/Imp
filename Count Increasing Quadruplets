/*2552. Count Increasing Quadruplets

Given a 0-indexed integer array nums of size n containing all numbers from 1 to n, return the number of increasing quadruplets.

A quadruplet (i, j, k, l) is increasing if:

0 <= i < j < k < l < n, and
nums[i] < nums[k] < nums[j] < nums[l].*/


class Solution {
    public long countQuadruplets(int[] nums) {
        int n = nums.length;
        long[] count = new long[n];
        long ans = 0;

        for (int i = 0; i < n; i++) {
            long smaller = 0;
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    smaller++;
                    ans += count[j];
                } else {
                    count[j] += smaller;
                }
            }
        }

        return ans;
    }
}
